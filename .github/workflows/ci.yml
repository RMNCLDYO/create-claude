name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Setup Node.js
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Enable corepack and set npm version
      run: |
        corepack enable
        corepack prepare npm@10.9.0 --activate

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      run: npm run typecheck

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Initialize CodeQL
      uses: github/codeql-action/init@c36620d31ac7c881962c3d9dd939c40ec9434f2b # v3.26.12
      with:
        languages: javascript-typescript

    - name: Autobuild
      uses: github/codeql-action/autobuild@c36620d31ac7c881962c3d9dd939c40ec9434f2b # v3.26.12

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@c36620d31ac7c881962c3d9dd939c40ec9434f2b # v3.26.12

  fuzz:
    name: Fuzz Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Setup Node.js
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Enable corepack and set npm version
      run: |
        corepack enable
        corepack prepare npm@10.9.0 --activate

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Install fast-check for fuzzing
      run: |
        npm install fast-check@3.22.0

    - name: Run fuzz tests
      run: |
        cat << 'EOF' > fuzz.test.mjs
        import { test } from 'node:test';
        import { strict as assert } from 'node:assert';
        import fc from 'fast-check';
        import * as utils from './dist/utils.js';

        test('detectPackageManager handles arbitrary strings', () => {
          fc.assert(fc.property(fc.string(), (input) => {
            try {
              const result = utils.detectPackageManager(input);
              assert.equal(typeof result, 'string');
              assert.ok(['npm', 'yarn', 'pnpm', 'bun'].includes(result));
            } catch (error) {
              assert.ok(error instanceof Error);
            }
          }));
        });

        test('validateTemplateVariables handles arbitrary objects', () => {
          fc.assert(fc.property(fc.object(), (input) => {
            try {
              const result = utils.validateTemplateVariables(input, []);
              assert.equal(typeof result, 'object');
            } catch (error) {
              assert.ok(error instanceof Error);
            }
          }));
        });

        test('renderTemplate handles arbitrary template strings', () => {
          fc.assert(fc.property(fc.string(), fc.object(), (template, vars) => {
            try {
              const result = utils.renderTemplate(template, vars);
              assert.equal(typeof result, 'string');
            } catch (error) {
              assert.ok(error instanceof Error);
            }
          }));
        });
        EOF
        
        node --test fuzz.test.mjs